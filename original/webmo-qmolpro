#!/bin/sh
prog=`basename $0`
prog=${prog#q}


maxtasks_per_node=8 ; maxcpus=8 ; cpus=$maxtasks_per_node ; cpus=1
# defaults
NODETYPE=${NODETYPE:-i686}
WALLTIME=1
tasks_per_node=$maxtasks_per_node
jobfile=${TMPDIR:-/tmp}/qmolpro_$$.sh
                                                                                
# parse options
set -- `getopt gvW:n:q: $*`
 
parse_opts=0
while [ "$1" != -- ]; do
  case "$1" in
    -g) debug=1 ;;
    -v) verbose=1 ;;
    -k) keeptmp=1 ;;
    -W) OPTION="$OPTION $2"; shift;;
    -n) NOPTION=$2; shift;;
    -q) QSUBARGS="$QSUBARGS -q $2"; shift;;
     *) parse_opts=1;;
  esac
  shift
done
shift


tasks_per_node=$maxtasks_per_node

if [ x${NOPTION} != x ]; then
  cpus=`echo $NOPTION | sed -e 's/\/.*$//'`
  tasks_per_node=`echo $NOPTION | sed -e 's/^.*\///' -e 's/:.*$//'`
  if [ $tasks_per_node -eq $cpus ]; then
   task_flag="total"
   tasks_per_node=$maxtasks_per_node
  elif [ $tasks_per_node -gt $maxtasks_per_node ]; then
   echo TASKS_PER_NODE too high, ignoring
   task_flag="total"
   tasks_per_node=$maxtasks_per_node
  fi
fi
#tasks_per_node=2
if [ $cpus -gt $maxcpus ] ; then echo Too many cpus ; parse_opts=1 ; fi
typeset -i nodes
let nodes=($cpus-1)/$tasks_per_node+1;
 
if [ $parse_opts -eq 1 ] ; then
cat << EOF
Usage: $SCRIPT -n CPUS/TASKS_PER_NODE -h HH[:MM[:SS]] [-v] [-k] -W MOLPRO_OPTION INPUT_FILES
EOF
exit 1
fi

if [ $cpus -eq 1 ]; then tasks_per_node=1; fi

if [ ! -z $verbose ]; then
echo 'Processors:      ' $cpus
echo 'Tasks per node:  ' $tasks_per_node
echo 'Nodes:           ' $nodes
fi;


DIR=`/bin/pwd`


if [ ! -z $debug ]; then debug='export MOLPRO_GA_DEBUG=1' ; fi
for file in $* ; do
jobname=`basename ${file}|sed -e 's/\.[a-zA-Z0-9]*$//'`
if [ ! -z $verbose ]; then echo "submitting $file as job $jobname nodes=$nodes:ppn=$tasks_per_node" ; fi
qjobname=`echo "$jobname" | sed -e 's,[-+.],,g' -e 's,\(..........\).*,\1,'`
cat << EOF > ${jobfile}

if [ -r ./.bashrc ]; then  . ./.bashrc ; fi
export MOLPRO_OPTIONS="$MOLPRO_OPTIONS"
export PATH=$PATH:\$PATH:/home/sacpjk/bin
#export TMPDIR2=\${TMPDIR2:-\$TMPDIR}
export SCRATCHDIR=/tmp/$USER/$$.`echo $file | sed -e s,/,_,g`
#module load molpro/2012.1.3
#module load torque
$debug
echo cd $PWD
cd $PWD
date
hostname
echo PBS_NODEFILE=\$PBS_NODEFILE
cat \$PBS_NODEFILE
echo ======================
echo 'Run program:'
which $prog
pbsdsh </dev/null >/dev/null 2>/dev/null || pbsdsh= && pbsdsh='pbsdsh --'
$pbsdsh mkdir -p \$SCRATCHDIR
df -h \$SCRATCHDIR
if [ $prog = molpro ]; then
echo $prog -v -d \$SCRATCHDIR $OPTION $file
time $prog -v -n $cpus -d \$SCRATCHDIR $OPTION $file
elif [ $prog = g09 ]; then
pwd
egrep '^@' $file | sed -e 's/^@//' | xargs -I % echo cp -p % \$SCRATCHDIR
egrep '^@' $file | sed -e 's/^@//' | xargs -I % cp -p % \$SCRATCHDIR
file=\$(realpath $file )
cd \$SCRATCHDIR
pwd
ls -l
output="\${file%.*}.out"
echo "$prog $OPTION < \$file > \$output"
time $prog $OPTION < \$file > \$output
else
echo $prog $OPTION $file
time $prog $OPTION $file
fi
if test -z $keeptmp ; then
 $pbsdsh rm -rf \$SCRATCHDIR
fi
#env
EOF
echo qsub $QSUBARGS -j oe -N ${qjobname} -l nodes=${nodes}:ppn=${tasks_per_node} ${jobfile}
qsub $QSUBARGS -j oe -N ${qjobname} -l nodes=${nodes}:ppn=${tasks_per_node} ${jobfile}

rm -f ${jobfile}

done

#export PATH=$JOBPATH:/opt/molpro/bin:\$PATH:/usr/local/bin
